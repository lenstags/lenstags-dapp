import { ProfileContext, TagsFilterContext } from 'components';
import { disable, enable, queryProfile } from '@lib/lens/dispatcher';
import { useContext, useEffect, useState } from 'react';

import { ATTRIBUTES_LIST_KEY } from '@lib/config';
import ExplorerCard from 'components/ExplorerCard';
import Head from 'next/head';
import ImageProxied from 'components/ImageProxied';
import { Layout } from 'components/Layout';
import type { NextPage } from 'next';
import Pagination from 'components/Pagination';
import { Spinner } from 'components/Spinner';
import { TagsFilter } from 'components/TagsFilter';
import { createDefaultList } from '@lib/lens/load-lists';
import { explore } from '@lib/lens/explore-publications';
import { useSnackbar } from 'material-ui-snackbar-provider';

const App: NextPage = () => {
  const [publications, setPublications] = useState<any[]>([]);
  const [hydrationLoading, setHydrationLoading] = useState(true);
  useEffect(() => {
    setHydrationLoading(false);
  }, []);

  const { tags } = useContext(TagsFilterContext);
  const [showWelcome, setShowWelcome] = useState(false);
  const [ready, setReady] = useState(false);

  const snackbar = useSnackbar();
  // const lensProfile = useContext(ProfileContext);
  const { profile: lensProfile } = useContext(ProfileContext);

  useEffect(() => {
    const findDefault = async () => {
      const profileResult = await queryProfile({ profileId: lensProfile?.id });

      // console.log('üéáüéáüéáüéá profileResult ', profileResult);
      // console.log('üéáüéáüéáüéá ATTRIBUTES_LIST_KEY ', ATTRIBUTES_LIST_KEY);

      let defaultListId = profileResult?.attributes?.find(
        (attribute) => attribute.key === ATTRIBUTES_LIST_KEY
      )?.value;
      // console.log('üéáüéáüéá hay defaultListId?: ', defaultListId);

      const enableRelayer =
        profileResult && !profileResult.dispatcher?.canUseRelay;

      if (enableRelayer || !defaultListId) {
        setShowWelcome(true);

        if (enableRelayer) {
          snackbar.showMessage('üü¶ Enabling Tx Dispatcher...');
          await enable(profileResult.id);
          snackbar.showMessage('üü¶ Dispatcher enabled successfully.');
        }

        if (!defaultListId) {
          snackbar.showMessage('üü¶ Creating default list...');
          await createDefaultList(profileResult);
          snackbar.showMessage('üíö LFGrow ‚öúÔ∏è!');
        }
        setReady(true);
      }
    };

    // FIXME THIS MUST BE STORED ON LOCALSTORAGE
    if (lensProfile?.id) {
      // console.log('üîÜ Verifying first connection');
      findDefault();
    }
  }, [lensProfile]);

  useEffect(() => {
    explore({ locale: 'en', tags }).then((data) => {
      return setPublications(data.items);
    });
  }, [tags]);

  if (hydrationLoading) {
    return (
      <div className="flex">
        <div className="my-8 justify-center">
          <Spinner h="10" w="10" />
        </div>
      </div>
    );
  }

  const handleWelcomeClick = () => {
    setShowWelcome(false);
  };

  return (
    <>
      <Head>
        <title>Nata Social</title>
        <meta name="description" content="Generated by Gardeners" />
        <script
          async
          defer
          data-website-id="d4364aba-a937-4eb1-ad86-085febbeb986"
          src="https://umami-natasocial.up.railway.app/umami.js"
        ></script>
        {/* <link
          rel="apple-touch-icon"
          sizes="180x180"
          href="favicon/apple-touch-icon.png"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="32x32"
          href="favicon/favicon-32x32.png"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="16x16"
          href="favicon/favicon-16x16.png"
        /> */}
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <link rel="icon" type="image/png" href="/favicon.png" />

        <link rel="manifest" href="/site.webmanifest" />
        <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5" />
        <meta name="msapplication-TileColor" content="#da532c" />
        <meta name="theme-color" content="#ffffff" />
      </Head>
      <div className="mt-6 h-full w-full items-center text-center">
        Coming soon‚Ñ¢Ô∏è{' '}
      </div>

      {false && (
        <Layout title={'Nata Social | Home'} pageDescription={'Welcome!'}>
          {showWelcome ? (
            <div
              className="h-full w-full"
              style={{
                backgroundImage:
                  'linear-gradient(to bottom, gray, lightsalmon)',
                backgroundSize: '400% 400%',
                animation: 'gradient 10s ease infinite'
              }}
            >
              <style jsx>{`
                @keyframes gradient {
                  0% {
                    background-position: 0% 0%;
                  }
                  50% {
                    background-position: 100% 100%;
                  }
                  100% {
                    background-position: 0% 0%;
                  }
                }
              `}</style>
              <div className=" mx-auto h-full w-1/3 items-center justify-center py-20 text-center font-mono">
                <ImageProxied
                  category="profile"
                  src="/img/logo-extended.svg"
                  alt=""
                  width={200}
                  height={120}
                />
                <p className=" text-justify font-mono text-lg">
                  This platform is an <b>Alpha</b> release
                  <i> (fresh out of the oven)</i>, meaning that some unexpected
                  behaviour may occur. We appreciate your understanding and
                  encourage you to report any issues you encounter.
                </p>

                <p className="py-4">Yours, The Nata Social team ‚öúÔ∏è</p>

                <p className="pb-4 text-xs">
                  P.S.: Meanwhile, we are performing some setup tasks in
                  background, fasten your seat belts! üöÄ
                </p>

                {ready ? (
                  <div>
                    <button
                      className=" bg-lensPurple px-3 py-2 font-sans text-white hover:bg-purple-500"
                      onClick={handleWelcomeClick}
                    >
                      Close
                    </button>
                  </div>
                ) : (
                  <div className="flex justify-center">
                    <Spinner h="10" w="10" />
                  </div>
                )}
              </div>
            </div>
          ) : (
            <div className="container mx-auto h-64 w-11/12 px-6 py-10 md:w-4/5 ">
              {/* <Profile /> */}
              {/* <Tabs /> */}
              <div className="mb-3">
                <TagsFilter />
              </div>
              <div className="container mx-auto ">
                <div className="-mx-1 flex flex-wrap justify-center lg:-mx-4">
                  {publications.length > 0 ? (
                    publications.map((post, index) => (
                      <ExplorerCard post={post} key={index} />
                    ))
                  ) : (
                    <div className="my-8">
                      <Spinner h="10" w="10" />
                    </div>
                  )}
                </div>
              </div>
              <div className="h-auto w-full">
                <Pagination />
              </div>
            </div>
          )}
        </Layout>
      )}
    </>
  );
};
<style jsx>{`
  @keyframes gradient {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }
`}</style>;

export default App;
